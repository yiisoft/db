on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: db-oracle

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.oracle }}

    env:
      COMPOSER_ROOT_VERSION: dev-master
      BRANCH_NAME: ${{ github.head_ref }}
      FULL_BRANCH_NAME: dev-${{ github.head_ref }}
      WORK_PACKAGE: db-oracle
      WORK_PACKAGE_URL: https://github.com/${{ github.event.pull_request.head.repo.owner.login }}/
      extensions: pdo, pdo_oci

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.0
          - 8.1
          - 8.2

        oracle:
          - 18
          - 21

    services:
      oci:
        image: gvenzl/oracle-xe:${{ matrix.oracle }}
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD : root
        options: >-
          --name=oci
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2, pecl

      - name: Update composer.
        run: composer self-update

      - name: Install db-oracle.
        uses: ./.github/actions/subpackage_install
        with:
          CURRENT_PACKAGE: db-oracle
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          FULL_BRANCH_NAME: ${{ env.FULL_BRANCH_NAME }}
          COMPOSER_ROOT_VERSION: ${{ env.COMPOSER_ROOT_VERSION }}
          WORK_PACKAGE_URL: ${{ env.WORK_PACKAGE_URL }}

      - name: Run oracle tests with phpunit and code coverage.
        run: vendor/bin/phpunit --testsuite Oracle --coverage-clover=coverage.xml --colors=always

      - name: Upload coverage to Codecov.
        if: matrix.php == '8.1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
