on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-sqlite.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

  push:
    branches: ['master']
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-sqlite.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

name: db-sqlite

jobs:
  tests:
    name: PHP ${{ matrix.php }}-sqlite-${{ matrix.os }}

    env:
      COMPOSER_ROOT_VERSION: dev-master
      CURRENT_PACKAGE: db-sqlite
      EXTENSIONS: pdo, pdo_sqlite

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php:
          - 8.1
          - 8.2
          - 8.3

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2, pecl

      - name: Update composer.
        run: composer self-update

      - name: Set environment variables pull request linux.
        if: matrix.os == 'ubuntu-latest'
        uses: yiisoft/actions/db/environment-linux@master

      - name: Set environment variables pull request windows.
        if: matrix.os == 'windows-latest'
        uses: yiisoft/actions/db/environment-windows@master

      - name: Install db.
        uses: yiisoft/actions/db/subpackage-install@master
        with:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          COMPOSER_ROOT_VERSION: ${{ env.COMPOSER_ROOT_VERSION }}
          CURRENT_PACKAGE: ${{ env.CURRENT_PACKAGE }}
          FULL_BRANCH_NAME: ${{ env.FULL_BRANCH_NAME }}
          WORK_PACKAGE_URL: ${{ env.WORK_PACKAGE_URL }}

      - name: Run sqlite tests with phpunit and code coverage.
        run: vendor/bin/phpunit --testsuite Sqlite --coverage-clover=coverage.xml --colors=always --display-warnings --display-deprecations

      - name: Upload coverage to Codecov.
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.3'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
