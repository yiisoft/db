on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: db-sqlite

jobs:
  tests:
    name: PHP ${{ matrix.php }}-sqlite

    env:
      COMPOSER_ROOT_VERSION: dev-master
      CURRENT_PACKAGE: db-sqlite
      extensions: pdo, pdo_sqlite

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php:
          - 8.0
          - 8.1
          - 8.2

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2, pecl

      - name: Update composer.
        run: composer self-update

      - name: Print the GitHub context.
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Set environment variable for work package url (pull request).
        if: github.event_name == 'pull_request'
        run: echo "WORK_PACKAGE_URL=https://github.com/${{ github.event.pull_request.head.repo.owner.login }}/" >> $GITHUB_ENV

      - name: Set environment variable for work package url (push).
        if: github.event_name == 'push'
        run: echo "WORK_PACKAGE_URL=https://github.com/${{ github.event.repository.owner.login }}/${{ env.CURRENT_PACKAGE }}/" >> $GITHUB_ENV

      - name: Install db-sqlite.
        uses: ./.github/actions/subpackage_install
        with:
          CURRENT_PACKAGE: ${{ env.CURRENT_PACKAGE }}
          BRANCH_NAME: ${{ github.head_ref }}
          FULL_BRANCH_NAME: dev-${{ github.head_ref }}
          COMPOSER_ROOT_VERSION: ${{ env.COMPOSER_ROOT_VERSION }}
          WORK_PACKAGE_URL: ${{ env.WORK_PACKAGE_URL }}

      - name: Run sqlite tests with phpunit and code coverage.
        run: vendor/bin/phpunit --testsuite Sqlite --coverage-clover=coverage.xml --colors=always

      - name: Upload coverage to Codecov.
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
