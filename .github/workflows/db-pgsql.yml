on:
  - pull_request
  - push

name: db-pgsql

jobs:
  tests:
    name: PHP ${{ matrix.php }}-pgsql-${{ matrix.pgsql }}

    env:
      COMPOSER_ROOT_VERSION: "dev-master"
      extensions: dom, json, pdo, pdo_pgsql
      key: cache-v1

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - "7.4"
          - "8.0"

        pgsql:
          - "9"
          - "10"
          - "11"
          - "12"

    services:
      postgres:
        image: postgres:${{ matrix.pgsql }}
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: yiitest
        ports:
          - 5432:5432
        options: --name=postgres --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov

      - name: Determine composer cache directory
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2.1.4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-${{ matrix.dependencies }}-

      - name: Update composer
        run: composer self-update

      - name: Install dependencies with composer php 7.4
        if: matrix.php == '7.4'
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Install dependencies with composer php 8.0
        if: matrix.php == '8.0'
        run: composer update --ignore-platform-reqs --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run pgsql tests with phpunit
        run: vendor/bin/phpunit --testsuite Pgsql --colors=always
