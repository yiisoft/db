on:
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-mysql.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

  push:
    branches: ['master']
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/db-mysql.yml'
      - 'composer.json'
      - 'phpunit.xml.dist'

name: db-mysql

jobs:
  tests:
    name: PHP ${{ matrix.php }}-mysql-${{ matrix.mysql }}

    env:
      COMPOSER_ROOT_VERSION: dev-master
      CURRENT_PACKAGE: db-mysql
      EXTENSIONS: pdo, pdo_mysql

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - 8.3

        mysql:
          - mysql:5.7
          - mysql:latest

        include:
          - php: 8.1
            mysql: mysql:latest
          - php: 8.2
            mysql: mysql:latest

    services:
      mysql:
        image: ${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD: ''
          MYSQL_DATABASE: yiitest
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          coverage: pcov

      - name: Update composer.
        run: composer self-update

      - name: Set environment variables pull request linux.
        uses: yiisoft/actions/db/environment-linux@master

      - name: Install db.
        uses: yiisoft/actions/db/subpackage-install@master
        with:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          COMPOSER_ROOT_VERSION: ${{ env.COMPOSER_ROOT_VERSION }}
          CURRENT_PACKAGE: ${{ env.CURRENT_PACKAGE }}
          FULL_BRANCH_NAME: ${{ env.FULL_BRANCH_NAME }}
          WORK_PACKAGE_URL: ${{ env.WORK_PACKAGE_URL }}

      - name: Run Mysql tests with phpunit and code coverage.
        run: vendor/bin/phpunit --testsuite Mysql --coverage-clover=coverage.xml --colors=always --display-warnings --display-deprecations

      - name: Upload coverage to Codecov.
        if: matrix.php == '8.3'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
